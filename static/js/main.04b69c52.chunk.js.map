{"version":3,"sources":["assets/images/main-bg.svg","assets/images/ic-resume.svg","assets/scss/themes.scss","assets/images/wip.svg","assets/scss/index.scss","components/Home.js","components/About.js","components/Loader.js","components/WIP.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","bio","Home","className","src","background","alt","steps","loop","Infinity","wrapper","onClick","window","open","icon","onContextMenu","e","preventDefault","About","Loader","props","clockLoader","React","createRef","state","loading","document","body","style","overflowY","this","setState","animation","size","color","theme","colorDark","Component","WIP","wip","App","loader","current","completeLoading","ref","Boolean","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"0FAAAA,EAAOC,QAAU,IAA0B,qC,mBCA3CD,EAAOC,QAAU,IAA0B,uC,mBCC3CD,EAAOC,QAAU,CAAC,UAAY,UAAU,eAAiB,UAAU,aAAe,UAAU,gBAAkB,Y,mBCD9GD,EAAOC,QAAU,IAA0B,iC,uDCC3CD,EAAOC,QAAU,CAAC,UAAY,UAAU,eAAiB,UAAU,aAAe,UAAU,gBAAkB,Y,sJCIxGC,EAAM,CACR,6BAA8B,IAC9B,kBAAmB,IACnB,+BAAgC,IAChC,gBAAiB,IACjB,sBAAuB,IACvB,iBAAkB,IAClB,+BAAgC,IAChC,oBAAqB,IACrB,kCAAmC,IACnC,oBAAqB,KA8BVC,EA3BF,WACT,OACI,yBAAKC,UAAU,QACX,yBAAKC,IAAKC,IAAYC,IAAI,8BAA8BH,UAAU,YAClE,yBAAKA,UAAU,cACX,yBAAKA,UAAU,SAAf,UACA,yBAAKA,UAAU,SAAf,QAA4B,6BAA5B,gBACA,kBAAC,IAAD,CACII,MAAON,EACPO,KAAMC,IACNC,QAAQ,IACRP,UAAU,SAIlB,yBAAKA,UAAU,YAAYQ,QAAS,WAChCC,OAAOC,KAAK,wEADhB,iBAII,yBAAKT,IAAKU,IAAMR,IAAI,KAAKH,UAAU,YAAYY,cAAe,SAACC,GAC3DA,EAAEC,uBCPPC,EA3BD,WACV,OACI,yBAAKf,UAAU,SACX,yBAAKA,UAAU,mBACX,yBAAKA,UAAU,SACf,yBAAKA,UAAU,gBAAgBG,IAAI,UAAUF,IAAI,4GAEjD,yBAAKD,UAAU,SACX,yBAAKA,UAAU,cAAa,oCAA5B,OACA,yBAAKA,UAAU,cAAf,UAAmC,0BAAMA,UAAU,QAAhB,OAA2B,4CAC9D,yBAAKA,UAAU,cACX,gIAGA,6RAGA,iK,gDCmBTgB,E,kDAnCb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,YAAcC,IAAMC,YACzB,EAAKC,MAAQ,CACXC,SAAS,GAEXC,SAASC,KAAKC,MAAMC,UAAY,SANf,E,8DAUfC,KAAKC,SAAS,CACVN,SAAS,EACTG,MAAO,CACLI,UAAW,+C,+BAUnB,OAHIF,KAAKN,MAAMC,UACXC,SAASC,KAAKC,MAAMC,UAAY,UAGlC,yBAAK1B,UAAU,SAASyB,MAAOE,KAAKN,MAAMI,OACxC,kBAAC,IAAD,CACEK,KAAM,IACNC,MAAOC,IAAMC,UACbX,SAAS,S,GA7BEH,IAAMe,W,iBCKZC,EANH,WACR,OACI,yBAAKlC,IAAKmC,IAAKjC,IAAI,4CAA4CH,UAAU,SCgClEqC,E,kDA5Bb,WAAYpB,GAAO,IAAD,8BAChB,cAAMA,IACDqB,OAASnB,IAAMC,YAFJ,E,gEAMhBO,KAAKW,OAAOC,QAAQC,oB,+BAIpB,OACE,yBAAKxC,UAAU,OAEb,yBAAKA,UAAU,eACb,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,OAEF,kBAAC,EAAD,CAAQyC,IAAKd,KAAKW,c,GAnBRnB,IAAMe,WCIJQ,QACW,cAA7BjC,OAAOkC,SAASC,UAEe,UAA7BnC,OAAOkC,SAASC,UAEhBnC,OAAOkC,SAASC,SAASC,MACvB,2D,MCZNC,IAASC,OACL,kBAAC,EAAD,MACFxB,SAASyB,eAAe,SD2HpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.04b69c52.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/main-bg.1f546ea6.svg\";","module.exports = __webpack_public_path__ + \"static/media/ic-resume.dba5b8bd.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"colorDark\":\"#3A3768\",\"colorSecondary\":\"#00BFA6\",\"colorPrimary\":\"#00AC95\",\"colorBackground\":\"#f7f7f7\"};","module.exports = __webpack_public_path__ + \"static/media/wip.0fe7ba92.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"colorDark\":\"#3A3768\",\"colorSecondary\":\"#00BFA6\",\"colorPrimary\":\"#00AC95\",\"colorBackground\":\"#f7f7f7\"};","import React from 'react';\r\nimport background from '../assets/images/main-bg.svg';\r\nimport icon from '../assets/images/ic-resume.svg';\r\nimport Typical from 'react-typical';\r\n\r\nconst bio = [\r\n    'I am an android developer.', 1000,\r\n    'I am a student.', 1000,\r\n    'I am a MERN Stack developer.', 1000,\r\n    'I am a gamer.', 1000,\r\n    'I am a UI designer.', 1000,\r\n    'I am a mentor.', 1000,\r\n    'I am an open source fanatic.', 1000,\r\n    'I am a javaphile.', 1000,\r\n    'I am a data science enthusiast.', 1000,\r\n    'I am a dog lover.', 1000,\r\n]\r\n\r\nconst Home = () => {\r\n    return(\r\n        <div className=\"Home\">\r\n            <img src={background} alt='Oops, something went wrong!' className=\"main-bg\" />\r\n            <div className=\"Intro-text\">\r\n                <div className=\"Hello\">Hello!</div>\r\n                <div className=\"Intro\">I am <br /> Kumar Harsh</div>\r\n                <Typical\r\n                    steps={bio}\r\n                    loop={Infinity}\r\n                    wrapper=\"p\"\r\n                    className='bio'\r\n                />\r\n            </div>\r\n\r\n            <div className='cv-button' onClick={() => {\r\n                window.open('https://drive.google.com/open?id=1NC3cLCaLZ_m-lKh6DsHhFFtkrVO7Xm_L');\r\n            }}>\r\n                View My Resume\r\n                <img src={icon} alt='Go' className=\"ic-resume\" onContextMenu={(e) => {\r\n                    e.preventDefault()\r\n                }} />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Home;","import React from 'react';\r\n\r\nconst bio=' \\n\\n';\r\n\r\nconst About = () => {\r\n    return(\r\n        <div className='About'>\r\n            <div className='About-Container'>\r\n                <div className='Col-1'> \r\n                <img className='Profile-Photo' alt='Profile' src='https://avatars0.githubusercontent.com/u/46624829?s=400&u=387daf3f9715ebca5467a76694b28fa7e01a8b66&v=4' />\r\n                </div>\r\n                <div className='Col-2'>\r\n                    <div className='About-Me-1'><b>About</b> Me</div>\r\n                    <div className='About-Me-2'>Hello! <span className='Name'>I'm <b>Kumar Harsh</b></span></div>\r\n                    <div className='About-Me-3'>\r\n                        <p>\r\n                        I’m a second-year student at NIT, Patna pursuing B.Tech in Computer Science and Engineering.\r\n                        </p>\r\n                        <p>\r\n                        Being a tech-enthusiast, I love to explore new technologies and leverage them to solve real-life problems. I am a detail-oriented developer with diverse experience in developing web applications, hybrid & native mobile apps and cloud computing solutions.\r\n                        </p>\r\n                        <p>\r\n                        I am a campus leader at HackSlash and I’m driven by the will to create an impact and encourage diversity in communities.\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default About;","import React from 'react';\r\nimport theme from '../assets/scss/themes.scss'\r\nimport ClockLoader from \"react-spinners/ClockLoader\";\r\n \r\nclass Loader extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.clockLoader = React.createRef();\r\n    this.state = {\r\n      loading: true\r\n    };\r\n    document.body.style.overflowY = \"hidden\";\r\n  }\r\n\r\n  completeLoading() {\r\n      this.setState({\r\n          loading: false,\r\n          style: {\r\n            animation: \"fade 0.4s linear 0.5s 1 normal forwards\"\r\n          }\r\n        }\r\n      );\r\n  }\r\n \r\n  render() {\r\n    if(!this.state.loading) {\r\n        document.body.style.overflowY = \"scroll\";\r\n    }\r\n    return (\r\n      <div className=\"loader\" style={this.state.style}>\r\n        <ClockLoader\r\n          size={150}\r\n          color={theme.colorDark}\r\n          loading={true}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Loader;","import React from 'react';\r\nimport wip from '../assets/images/wip.svg';\r\n\r\nconst WIP = () => {\r\n    return(\r\n        <img src={wip} alt=\"Work in Progress. Pleae check back later!\" className=\"wip\" />\r\n    )\r\n}\r\n\r\nexport default WIP;","import React from 'react';\r\nimport Home from './components/Home';\r\nimport About from './components/About';\r\nimport NavBar from './components/NavBar';\r\nimport Loader from './components/Loader';\r\nimport WIP from './components/WIP';\r\n\r\n\r\nclass App extends React.Component{\r\n  constructor(props){\r\n    super(props);\r\n    this.loader = React.createRef();\r\n  }\r\n\r\n  componentDidMount(){\r\n    this.loader.current.completeLoading();\r\n  }\r\n\r\n  render(){\r\n    return (\r\n      <div className=\"App\">\r\n        {/* <NavBar /> */}\r\n        <div className=\"theme-light\">\r\n          <Home />\r\n          <About />\r\n          <WIP />\r\n        </div>\r\n        <Loader ref={this.loader} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n// function App() {\r\n  \r\n// }\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport './assets/scss/index.scss';\r\n\r\nReactDOM.render(\r\n    <App />,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}